version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: omnitrade-postgres
    environment:
      POSTGRES_USER: omnitrade
      POSTGRES_PASSWORD: omnitrade_password
      POSTGRES_DB: omnitrade
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - omnitrade-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U omnitrade"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: omnitrade-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - omnitrade-network
    restart: unless-stopped

  # InfluxDB Time Series Database
  influxdb:
    image: influxdb:2.7-alpine
    container_name: omnitrade-influxdb
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: admin
      DOCKER_INFLUXDB_INIT_PASSWORD: adminpassword
      DOCKER_INFLUXDB_INIT_ORG: omnitrade
      DOCKER_INFLUXDB_INIT_BUCKET: trading_data
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: omnitrade-token-change-this
    volumes:
      - influxdb_data:/var/lib/influxdb2
    ports:
      - "8086:8086"
    networks:
      - omnitrade-network
    restart: unless-stopped

  # Trading Backend API
  backend:
    build:
      context: ./backend
      dockerfile: ../docker/Dockerfile.backend
    container_name: omnitrade-backend
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql://omnitrade:omnitrade_password@postgres:5432/omnitrade
      REDIS_URL: redis://redis:6379/0
      INFLUXDB_URL: http://influxdb:8086
    volumes:
      - ./backend:/app
      - ./logs:/app/logs
      - ./data:/app/data
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - influxdb
    networks:
      - omnitrade-network
    restart: unless-stopped
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend (Optional - React Dashboard)
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: ../docker/Dockerfile.frontend
  #   container_name: omnitrade-frontend
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - backend
  #   networks:
  #     - omnitrade-network
  #   restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  influxdb_data:

networks:
  omnitrade-network:
    driver: bridge

